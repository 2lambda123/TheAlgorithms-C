name: testing

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install requirements
      run: |
          brew install graphviz ninja doxygen
    - name: configure
      run: cmake -G Ninja -B ./build -S .
      
    - name: set tag
      run: |
          echo "full_tag=$(grep ARG Dockerfile | sed 's/ARG v=//')" >> ${GITHUB_ENV}
          echo "tag=$(grep ARG Dockerfile | sed 's/ARG v=//' | cut -d '.' -f -2)" >> ${GITHUB_ENV}  
      
    - name: build
      run: docker build -t hyiik09/assignment:${{ env.full_tag }} -t hyiik09/assignment:${{ env.tag }} .

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - uses: actions/checkout@v2
      name: Check out code
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: push
      run: |
          for t in ${{env.full_tag}} ${{env.tag}}; do
            docker push hyiik09/assignment:${t}
          done

      
   # - name: Docker Build and Push C
   # - uses: mr-smithers-excellent/docker-build-push@v5
   #   with:
   #     image: docker-hub-repo/image-name
   #     registry: docker.io
   #     username: ${{ secrets.DOCKER_USERNAME }}
   #     password: ${{ secrets.DOCKER_PASSWORD }}
   
   
      
